[config]
default_to_workspace = false

# Utils
[tasks.npm-update]
command = "npm"
args = ["update"]

[tasks.npm-update.windows]
command = "powershell"
args = ["-Command", "npm", "update"]

[tasks.update]
command = "cargo"
args = ["update"]
dependencies = ["npm-update"]

[tasks.fmt]
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--all"]

[tasks.clippy]
install_crate = "clippy"
command = "cargo"
args = ["clippy", "--all"]
dependencies = ["fmt"]

[tasks.outdated]
install_crate = "outdated"
command = "cargo"
args = ["outdated", "-wR"]
dependencies = ["update"]

[tasks.test]
command = "cargo"
args = ["test", "--all"]
dependencies = ["update"]

# Serve
[tasks.tailwind-watch]
command = "npm"
args = ["run", "watch"]

[tasks.tailwind-watch.windows]
command = "powershell"
args = ["-Command", "npm", "run", "watch"]

[tasks.trunk-serve]
install_crate = "trunk"
command = "trunk"
args = ["serve"]

[tasks.serve]
run_task = { name = ["tailwind-watch", "trunk-serve"], parallel = true }

# Build
[tasks.copy-databases]
script_runner = "@duckscript"
script = '''
rm -r ./target/release/databases
cp ./databases ./target/release
'''

[tasks.tailwind-build]
command = "npm"
args = ["run", "build"]

[tasks.tailwind-build.windows]
command = "powershell"
args = ["-Command", "npm", "run", "build"]

[tasks.trunk-build]
install_crate = "trunk"
command = "trunk"
args = ["build"]

[tasks.build]
clear = true
command = "cargo"
args = ["build", "-p", "app"]
dependencies = ["tailwind-build", "trunk-build"]

[tasks.run]
clear = true
command = "cargo"
args = ["run", "-p", "app"]
dependencies = ["tailwind-build", "trunk-build"]

[tasks.release]
command = "cargo"
args = ["build", "--release"]
dependencies = ["copy-databases", "update"]

# Cook
[tasks.zip]
script_runner = "@duckscript"
script = '''
cd ./target/release/

project_name = set "${CARGO_MAKE_PROJECT_NAME}"
dir = set "${project_name}"
mkdir "${dir}"
cp ./databases "./${dir}/"

ext = set ""
if eq "${CARGO_MAKE_RUST_TARGET_OS}" "windows"
	ext = set ".exe"
end

file_name = set "${project_name}${ext}"
cp "./${file_name}" "./${dir}/${file_name}"

exec 7z a "${CARGO_MAKE_WORKING_DIRECTORY}/${project_name}.zip" "${project_name}" -mx=7

rm -r "./${dir}/"
'''

[tasks.cook]
dependencies = ["fmt", "clippy", "test", "release", "zip"]
